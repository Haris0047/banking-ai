{
  "ddl_statements": [
    {
      "table": "transactions",
      "ddl": "CREATE TABLE transactions (\n            txn_id INTEGER PRIMARY KEY,\n            account_id INTEGER NOT NULL,\n            occurred_at TEXT NOT NULL,\n            posted_at TEXT NOT NULL,\n            direction TEXT NOT NULL CHECK (direction IN ('debit','credit')),\n            amount NUMERIC NOT NULL CHECK (amount > 0),\n            currency TEXT NOT NULL,\n            amount_aed NUMERIC NOT NULL,\n            fx_rate NUMERIC,\n            txn_type TEXT NOT NULL CHECK (txn_type IN ('purchase','atm_withdrawal','transfer_in','transfer_out',\n                'salary','refund','fee','interest','bill_payment','card_payment','cash_deposit','cheque')),\n            merchant_name TEXT,\n            merchant_category TEXT,\n            city TEXT,\n            country TEXT NOT NULL,\n            status TEXT NOT NULL CHECK (status IN ('pending','posted','reversed')),\n            description TEXT NOT NULL,\n            transfer_group_id TEXT,\n            running_balance_after NUMERIC NOT NULL,\n            FOREIGN KEY (account_id) REFERENCES accounts(account_id)\n        )",
      "description": "Central transaction table that stores all financial activities across user accounts. This includes debit transactions (purchases at merchants, ATM withdrawals, bill payments, fees) and credit transactions (salary deposits, refunds, transfers in). Each transaction captures detailed merchant information, location data, transaction types, and maintains running balance calculations. Critical for analyzing spending patterns, merchant preferences, financial behavior, and generating insights about user expenses and income. Contains both the original transaction currency and AED-converted amounts for multi-currency support.",
      "join_info": [
        {
          "target_table": "accounts",
          "on_condition": "transactions.account_id = accounts.account_id"
        }
      ],
      "columns": [
        {
          "name": "txn_id",
          "description": "Unique auto-incrementing identifier for each transaction record. Used as primary key for referencing specific transactions in queries and joins."
        },
        {
          "name": "account_id",
          "description": "Foreign key reference to the accounts table indicating which user account this transaction belongs to. Essential for filtering transactions by account and user."
        },
        {
          "name": "occurred_at",
          "description": "Exact timestamp when the transaction actually took place in real-world (e.g., when card was swiped, when online payment was made). Used for chronological analysis and time-based filtering."
        },
        {
          "name": "posted_at",
          "description": "Timestamp when the transaction was officially processed and posted to the account by the bank. May differ from occurred_at due to processing delays, weekends, or holidays."
        },
        {
          "name": "direction",
          "description": "Indicates money flow direction: 'debit' means money leaving the account (expenses, payments, withdrawals), 'credit' means money entering the account (income, refunds, deposits). Critical for expense vs income analysis."
        },
        {
          "name": "amount",
          "description": "Original transaction amount in the currency it was made (before any currency conversion). Always positive regardless of direction - use 'direction' field to determine if it's incoming or outgoing."
        },
        {
          "name": "currency",
          "description": "ISO currency code of the original transaction (AED, USD, EUR, GBP, SAR, etc.). Important for multi-currency analysis and understanding foreign transactions."
        },
        {
          "name": "amount_aed",
          "description": "Transaction amount converted to UAE Dirhams (AED) using the exchange rate at transaction time. This standardized amount enables consistent financial analysis and reporting across all currencies."
        },
        {
          "name": "fx_rate",
          "description": "Exchange rate used to convert original currency to AED (how many AED per unit of original currency). NULL for transactions already in AED. Essential for understanding currency conversion costs and rates."
        },
        {
          "name": "txn_type",
          "description": "Categorizes the nature of the transaction: 'purchase' (retail/online buying), 'bill_payment' (utilities, rent), 'salary' (income), 'atm_withdrawal' (cash), 'transfer_in/out' (between accounts), 'refund', 'fee', 'interest'. Used for expense categorization and financial analysis."
        },
        {
          "name": "merchant_name",
          "description": "Name of the business, merchant, or entity where the transaction occurred (e.g., 'Carrefour', 'Emirates NBD', 'Netflix'). May contain variations or abbreviations of the same merchant. Key field for merchant analysis and spending pattern identification."
        },
        {
          "name": "merchant_category",
          "description": "Business category classification of the merchant (e.g., 'Groceries', 'Dining', 'Transport', 'Rent', 'Entertainment', 'Utilities'). Used for spending analysis by category, budgeting, and understanding expense patterns across different types of purchases."
        },
        {
          "name": "city",
          "description": "Geographic city location where the transaction physically occurred or where the merchant is based. Useful for location-based spending analysis, travel expense tracking, and understanding regional spending patterns."
        },
        {
          "name": "country",
          "description": "Country where the transaction took place, following ISO country codes (e.g., 'UAE', 'USA', 'UK'). Important for international spending analysis, foreign transaction identification, and tax reporting purposes."
        },
        {
          "name": "status",
          "description": "Current processing status of the transaction: 'pending' (authorized but not yet settled), 'posted' (completed and settled), 'reversed' (cancelled or refunded). Critical for determining which transactions should be included in balance calculations and financial reporting."
        },
        {
          "name": "description",
          "description": "Human-readable detailed description of the transaction including payment method used (e.g., 'Card Payment at Carrefour', 'Samsung Pay - Netflix', 'Online Transfer to John Doe'). Provides additional context beyond merchant name for transaction identification and categorization."
        },
        {
          "name": "transfer_group_id",
          "description": "Unique identifier that links related transfer transactions together, particularly transfer_in and transfer_out pairs when money moves between accounts. NULL for non-transfer transactions. Essential for avoiding double-counting in net worth calculations."
        },
        {
          "name": "running_balance_after",
          "description": "The account balance in AED immediately after this transaction was processed and posted. Provides a historical view of account balance changes over time and enables balance verification and reconciliation."
        }
      ],
      "sample_data": [
        {
          "txn_id": 1,
          "account_id": 1,
          "occurred_at": "2024-01-01 01:39:56",
          "posted_at": "2024-01-01 02:18:34",
          "direction": "debit",
          "amount": 5000,
          "currency": "AED",
          "amount_aed": 5000,
          "fx_rate": null,
          "txn_type": "bill_payment",
          "merchant_name": "Azizi Developments",
          "merchant_category": "Rent",
          "city": "Abu Dhabi",
          "country": "UAE",
          "status": "posted",
          "description": "Service Payment - Azizi Developments",
          "transfer_group_id": null,
          "running_balance_after": 30000
        },
        {
          "txn_id": 6,
          "account_id": 1,
          "occurred_at": "2024-01-10 14:08:20",
          "posted_at": "2024-01-10 15:19:05",
          "direction": "debit",
          "amount": 90.12,
          "currency": "AED",
          "amount_aed": 90.12,
          "fx_rate": null,
          "txn_type": "purchase",
          "merchant_name": "Istanbul Supermarket",
          "merchant_category": "Groceries",
          "city": "Umm Al Quwain",
          "country": "UAE",
          "status": "posted",
          "description": "Tap & Pay - Istanbul Supermarket",
          "transfer_group_id": null,
          "running_balance_after": 24030.95
        },
        {
          "txn_id": 9,
          "account_id": 1,
          "occurred_at": "2024-01-14 05:35:10",
          "posted_at": "2024-01-14 12:11:22",
          "direction": "debit",
          "amount": 112.18,
          "currency": "AED",
          "amount_aed": 112.18,
          "fx_rate": null,
          "txn_type": "purchase",
          "merchant_name": "Burger King",
          "merchant_category": "Dining",
          "city": "Fujairah",
          "country": "UAE",
          "status": "posted",
          "description": "Samsung Pay - Burger King",
          "transfer_group_id": null,
          "running_balance_after": 24042.48
        },
        {
          "txn_id": 11,
          "account_id": 1,
          "occurred_at": "2024-01-16 14:31:26",
          "posted_at": "2024-01-17 00:44:03",
          "direction": "debit",
          "amount": 91.18,
          "currency": "AED",
          "amount_aed": 91.18,
          "fx_rate": null,
          "txn_type": "purchase",
          "merchant_name": "Nesto Hypermarket",
          "merchant_category": "Groceries",
          "city": "Ras Al Khaimah",
          "country": "UAE",
          "status": "posted",
          "description": "Samsung Pay - Nesto Hypermarket",
          "transfer_group_id": null,
          "running_balance_after": 22980.28
        },
        {
          "txn_id": 12,
          "account_id": 1,
          "occurred_at": "2024-01-16 05:31:10",
          "posted_at": "2024-01-16 06:29:24",
          "direction": "debit",
          "amount": 805.11,
          "currency": "AED",
          "amount_aed": 805.11,
          "fx_rate": null,
          "txn_type": "purchase",
          "merchant_name": "Epic Games",
          "merchant_category": "Utilities",
          "city": "Sharjah",
          "country": "UAE",
          "status": "posted",
          "description": "Card Payment at Epic Games",
          "transfer_group_id": null,
          "running_balance_after": 23071.46
        }
      ]
    },
    {
      "table": "users",
      "ddl": "CREATE TABLE users (\n            user_id INTEGER PRIMARY KEY,\n            full_name TEXT NOT NULL,\n            email TEXT UNIQUE NOT NULL,\n            created_at TEXT NOT NULL\n        )",
      "description": "Master user registry containing all registered users of the banking system. This table serves as the central identity store linking users to their accounts, transactions, and financial data. Each user has a unique identifier used throughout the system for data isolation and personalized financial analysis. Essential for user authentication, account ownership verification, and ensuring data privacy between different users.",
      "join_info": [
     
      ],
      "columns": [
        {
          "name": "user_id",
          "description": "Primary key and unique identifier for each user in the system. This ID is referenced throughout all other tables (accounts, transactions) to establish data ownership and enable user-specific queries. Critical for filtering data by user and maintaining data isolation between different customers."
        },
        {
          "name": "full_name",
          "description": "Complete legal name of the user as registered in the banking system (e.g., 'Allison Hill', 'Muhammad Haris'). Used for personalization, reporting, and customer identification in user interfaces and communications."
        },
        {
          "name": "email",
          "description": "Unique email address serving as the user's login credential and primary communication channel. Must be unique across all users to prevent account conflicts. Used for authentication, password resets, and system notifications."
        },
        {
          "name": "created_at",
          "description": "Timestamp recording when the user first registered their account in the system. Useful for user lifecycle analysis, onboarding tracking, and determining account age for various business rules and customer segmentation."
        }
      ],
      "sample_data": [
        {
          "user_id": 1,
          "full_name": "Allison Hill",
          "email": "allison.hill@gmail.com",
          "created_at": "2023-01-01 00:00:00"
        },
        {
          "user_id": 2,
          "full_name": "Muhammad Haris",
          "email": "muhammad.haris@example.com",
          "created_at": "2025-08-29T17:46:44Z"
        }
      ]
    },
    {
      "table": "accounts",
      "ddl": "CREATE TABLE accounts (\n            account_id INTEGER PRIMARY KEY,\n            user_id INTEGER NOT NULL,\n            account_type TEXT NOT NULL CHECK (account_type IN ('checking','savings','credit_card','brokerage_cash')),\n            account_name TEXT NOT NULL,\n            currency TEXT NOT NULL CHECK (currency IN ('AED','SAR','USD','EUR','GBP')),\n            opened_at TEXT NOT NULL,\n            closed_at TEXT,\n            starting_balance NUMERIC NOT NULL,\n            FOREIGN KEY (user_id) REFERENCES users(user_id)\n        )",
      "description": "Comprehensive account registry storing all financial accounts owned by users across different banks and account types. Includes traditional banking accounts (checking, savings), credit facilities (credit cards), and investment accounts (brokerage cash). Each account maintains its base currency, lifecycle information, and starting balance. Essential for multi-account financial analysis, net worth calculations, and understanding user's complete financial portfolio across different institutions and currencies.",
      "join_info": [
        {
          "target_table": "users",
          "on_condition": "accounts.user_id = users.user_id"
        }
      ],
      "columns": [
        {
          "name": "account_id",
          "description": "Primary key uniquely identifying each financial account in the system. Referenced by transactions table to link all financial activities to specific accounts. Critical for account-based filtering and multi-account analysis."
        },
        {
          "name": "user_id",
          "description": "Foreign key linking this account to its owner in the users table. Enables user-specific account filtering and ensures proper data isolation. Essential for queries like 'show all accounts for user X' and maintaining data privacy between users."
        },
        {
          "name": "account_type",
          "description": "Categorizes the account's financial purpose and behavior: 'checking' (daily transactions, debit cards), 'savings' (interest-bearing deposits), 'credit_card' (revolving credit with negative balances), 'brokerage_cash' (investment account cash holdings). Used for account-type specific analysis and different balance calculation rules."
        },
        {
          "name": "account_name",
          "description": "Human-readable display name for the account, often including the bank name and product type (e.g., 'Emirates NBD Current Account', 'ADCB Savings Plus', 'FAB Infinite Credit Card'). Used in user interfaces and reports for easy account identification."
        },
        {
          "name": "currency",
          "description": "Base currency in which this account operates and maintains its primary balance (AED, SAR, USD, EUR, GBP). Determines the native currency for balance calculations and affects foreign exchange considerations for cross-currency transactions."
        },
        {
          "name": "opened_at",
          "description": "Date when the account was first opened and became active. Used for account age analysis, lifecycle tracking, and determining eligibility for various financial products or services based on account tenure."
        },
        {
          "name": "closed_at",
          "description": "Date when the account was officially closed and deactivated. NULL for active accounts. Important for filtering active vs. closed accounts in current financial analysis while maintaining historical data for closed accounts."
        },
        {
          "name": "starting_balance",
          "description": "Initial balance amount when the account was first opened, in the account's base currency. Provides baseline for calculating total gains/losses over the account's lifetime and understanding the account's initial funding source."
        }
      ],
      "sample_data": [
        {
          "account_id": 1,
          "user_id": 1,
          "account_type": "checking",
          "account_name": "Emirates NBD Current Account",
          "currency": "AED",
          "opened_at": "2022-12-29",
          "closed_at": null,
          "starting_balance": 35000
        },
        {
          "account_id": 2,
          "user_id": 1,
          "account_type": "savings",
          "account_name": "ADCB Savings Plus",
          "currency": "AED",
          "opened_at": "2022-12-27",
          "closed_at": null,
          "starting_balance": 75000
        },
        {
          "account_id": 3,
          "user_id": 1,
          "account_type": "credit_card",
          "account_name": "FAB Infinite Credit Card",
          "currency": "AED",
          "opened_at": "2022-04-19",
          "closed_at": null,
          "starting_balance": -8500
        },
        {
          "account_id": 4,
          "user_id": 1,
          "account_type": "brokerage_cash",
          "account_name": "ADIB Investment Account",
          "currency": "AED",
          "opened_at": "2022-05-26",
          "closed_at": null,
          "starting_balance": 25000
        },
        {
          "account_id": 5,
          "user_id": 2,
          "account_type": "checking",
          "account_name": "Primary Checking",
          "currency": "AED",
          "opened_at": "2025-08-29",
          "closed_at": null,
          "starting_balance": 1000.00
        }
      ]
    },
    {
      "table": "daily_account_value",
      "ddl": "CREATE TABLE daily_account_value (\n            dav_id INTEGER PRIMARY KEY,\n            account_id INTEGER NOT NULL,\n            date TEXT NOT NULL,\n            start_balance NUMERIC NOT NULL,\n            total_credits NUMERIC NOT NULL,\n            total_debits NUMERIC NOT NULL,\n            interest_accrued NUMERIC NOT NULL,\n            fees_charged NUMERIC NOT NULL,\n            end_balance NUMERIC NOT NULL,\n            FOREIGN KEY (account_id) REFERENCES accounts(account_id),\n            UNIQUE(account_id, date)\n        )",
      "description": "Daily financial snapshot table providing aggregated account activity and balance information for each account on each day. Pre-calculates daily totals for credits, debits, interest, and fees to enable efficient historical analysis and balance tracking. Essential for generating account statements, daily balance reports, cash flow analysis, and understanding account activity patterns over time. Each record represents one account's complete financial activity for a single day.",
      "join_info": [
        {
          "target_table": "accounts",
          "on_condition": "daily_account_value.account_id = accounts.account_id"
        }
      ],
      "columns": [
        {
          "name": "dav_id",
          "description": "Primary key uniquely identifying each daily account value record. Auto-incrementing identifier used for efficient indexing and referencing specific daily snapshots in queries and reports."
        },
        {
          "name": "account_id",
          "description": "Foreign key reference to the accounts table indicating which account this daily summary belongs to. Essential for linking daily summaries to specific accounts and enabling account-based historical analysis."
        },
        {
          "name": "date",
          "description": "Calendar date (YYYY-MM-DD format) for which this daily summary is calculated. Combined with account_id forms a unique constraint ensuring one summary per account per day. Critical for time-series analysis and date-based filtering."
        },
        {
          "name": "start_balance",
          "description": "Account balance at the beginning of the day (00:00:00), before any transactions are processed. Represents the closing balance from the previous day and serves as the baseline for calculating daily changes."
        },
        {
          "name": "total_credits",
          "description": "Sum of all credit transactions (money coming into the account) that were posted on this date. Includes deposits, salary payments, refunds, and transfer-ins. Used for analyzing daily income and positive cash flow patterns."
        },
        {
          "name": "total_debits",
          "description": "Sum of all debit transactions (money leaving the account) that were posted on this date. Includes purchases, bill payments, ATM withdrawals, and transfer-outs. Used for analyzing daily spending and negative cash flow patterns."
        },
        {
          "name": "interest_accrued",
          "description": "Interest amount earned and credited to the account on this specific day, typically for savings accounts or interest-bearing checking accounts. Zero for non-interest bearing accounts. Important for calculating total returns and interest income analysis."
        },
        {
          "name": "fees_charged",
          "description": "Total fees charged to the account on this day, including maintenance fees, overdraft fees, transaction fees, or other bank charges. Used for fee analysis and understanding the true cost of account ownership."
        },
        {
          "name": "end_balance",
          "description": "Final account balance at the end of the day (23:59:59) after all transactions, interest, and fees have been processed. Calculated as start_balance + total_credits - total_debits + interest_accrued - fees_charged. This becomes the next day's start_balance."
        }
      ],
      "sample_data": [
        {
          "dav_id": 1,
          "account_id": 1,
          "date": "2024-01-01",
          "start_balance": 35000,
          "total_credits": 0,
          "total_debits": 10000,
          "interest_accrued": 0,
          "fees_charged": 0,
          "end_balance": 25000
        },
        {
          "dav_id": 3,
          "account_id": 1,
          "date": "2024-01-03",
          "start_balance": 25000,
          "total_credits": 0,
          "total_debits": 530.5,
          "interest_accrued": 0,
          "fees_charged": 0,
          "end_balance": 24469.5
        },
        {
          "dav_id": 7,
          "account_id": 1,
          "date": "2024-01-07",
          "start_balance": 24469.5,
          "total_credits": 0,
          "total_debits": 348.43,
          "interest_accrued": 0,
          "fees_charged": 0,
          "end_balance": 24121.07
        },
        {
          "dav_id": 10,
          "account_id": 1,
          "date": "2024-01-10",
          "start_balance": 24121.07,
          "total_credits": 0,
          "total_debits": 90.12,
          "interest_accrued": 0,
          "fees_charged": 0,
          "end_balance": 24030.95
        }
      ]
    },
    {
      "table": "fx_rates",
      "ddl": "CREATE TABLE fx_rates (\n            rate_date TEXT NOT NULL,\n            base_currency TEXT NOT NULL,\n            aed_per_unit NUMERIC NOT NULL,\n            UNIQUE(rate_date, base_currency)\n        )",
      "description": "Historical foreign exchange rates repository maintaining daily conversion rates between UAE Dirhams (AED) and major international currencies. Essential for converting multi-currency transactions to AED for consistent financial analysis and reporting. Supports accurate historical transaction conversion, currency exposure analysis, and understanding the impact of exchange rate fluctuations on account values. Updated daily with market rates from financial data providers.",
      "join_info": [
        
      ],
      "columns": [
        {
          "name": "rate_date",
          "description": "Calendar date (YYYY-MM-DD) for which this exchange rate is valid and should be used for currency conversions. Combined with base_currency forms unique constraint ensuring one rate per currency per day. Critical for historical accuracy in transaction conversions."
        },
        {
          "name": "base_currency",
          "description": "ISO 4217 currency code of the foreign currency being converted to AED (e.g., 'USD', 'EUR', 'GBP', 'SAR'). Represents the source currency in conversion calculations. Used to match against transaction currencies for appropriate rate selection."
        },
        {
          "name": "aed_per_unit",
          "description": "Exchange rate expressing how many UAE Dirhams (AED) equal one unit of the base currency. For example, if USD rate is 3.677, then 1 USD = 3.677 AED. Used in multiplication to convert foreign currency amounts to AED (foreign_amount × aed_per_unit = aed_amount)."
        }
      ],
      "sample_data": [
        {
          "rate_date": "2024-01-01",
          "base_currency": "USD",
          "aed_per_unit": 3.677
        },
        {
          "rate_date": "2024-01-01",
          "base_currency": "EUR",
          "aed_per_unit": 4.0442
        },
        {
          "rate_date": "2024-01-01",
          "base_currency": "GBP",
          "aed_per_unit": 4.6503
        },
        {
          "rate_date": "2024-01-01",
          "base_currency": "SAR",
          "aed_per_unit": 0.993
        },
        {
          "rate_date": "2024-01-02",
          "base_currency": "USD",
          "aed_per_unit": 3.6789
        },
        {
          "rate_date": "2024-01-03",
          "base_currency": "USD",
          "aed_per_unit": 3.6748
        }
      ]
    },
    {
      "table": "merchants",
      "ddl": "CREATE TABLE merchants (\n            merchant_id INTEGER PRIMARY KEY,\n            merchant_name TEXT NOT NULL,\n            merchant_category TEXT NOT NULL,\n            country TEXT NOT NULL\n        )",
      "description": "Comprehensive merchant registry containing standardized information about businesses and service providers where transactions occur. Serves as a reference database for merchant normalization, category standardization, and location validation. Used for fuzzy matching algorithms to resolve merchant name variations in transaction data and ensure consistent merchant identification across the system. Essential for accurate spending analysis by merchant and category.",
      "join_info": [
       
      ],
      "columns": [
        {
          "name": "merchant_id",
          "description": "Primary key uniquely identifying each merchant in the system. Used for efficient referencing and potential future normalization of transaction merchant names to standardized merchant records."
        },
        {
          "name": "merchant_name",
          "description": "Standardized official name of the merchant or business (e.g., 'Carrefour', 'Lulu Hypermarket', 'Emirates NBD'). Represents the canonical form used for merchant name normalization and fuzzy matching against transaction merchant_name variations."
        },
        {
          "name": "merchant_category",
          "description": "Standardized business category classification (e.g., 'Groceries', 'Dining', 'Transport', 'Banking', 'Entertainment'). Used for consistent categorization across all merchants and enables accurate spending analysis by category regardless of merchant name variations."
        },
        {
          "name": "country",
          "description": "ISO country code indicating the primary country of operation for this merchant (e.g., 'UAE', 'USA', 'UK'). Used for geographic analysis, international vs. domestic spending categorization, and location-based merchant filtering."
        }
      ],
      "sample_data": [
        {
          "merchant_id": 1,
          "merchant_name": "Carrefour",
          "merchant_category": "Groceries",
          "country": "UAE"
        },
        {
          "merchant_id": 2,
          "merchant_name": "Lulu Hypermarket",
          "merchant_category": "Groceries",
          "country": "UAE"
        },
        {
          "merchant_id": 3,
          "merchant_name": "Spinneys",
          "merchant_category": "Groceries",
          "country": "UAE"
        },
        {
          "merchant_id": 4,
          "merchant_name": "Union Coop",
          "merchant_category": "Groceries",
          "country": "UAE"
        },
        {
          "merchant_id": 5,
          "merchant_name": "Waitrose",
          "merchant_category": "Groceries",
          "country": "UAE"
        },
        {
          "merchant_id": 9,
          "merchant_name": "Viva Supermarket",
          "merchant_category": "Groceries",
          "country": "UAE"
        },
        {
          "merchant_id": 10,
          "merchant_name": "West Zone",
          "merchant_category": "Groceries",
          "country": "UAE"
        }
      ]
    }
  ]
}
